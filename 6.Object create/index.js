const person = Object.create( //create - метод для создания объекта
    { //первый параметр - это прототип для данного объекта, виден при итерации по объекту
        calculateAge() {
            console.log('Age: ', new Date().getFullYear() - this.birthYear) //выведет возраст объекта
        }
    },
    {
        name: { //при создании объекта через Object.create, все ключи настраиваються через объекты с дискрипторами (ключь со значением, где ключь - это своего рода парамет отвечающий за определеное свойство поля объекта)
            value: 'Yevgeniy', //дискриптор value отвечает за значени переданное в ключь объекта
            enumerable: true, //дискриптор отвечающий за итерацию в цикле for, при его отсутствии, данное поле объекта не будет итерироваться
            writable: true, //дискриптор позволяющий менять значение поля
            configurable: true //дискриптор позволяющий удалять ключ из объекта
        },
        birthYear: {
            value: 1984
        },
        age: {
            get() { //гетер - отвечает за вывод результат какой либо операции с данными объекта
                return new Date().getFullYear() - this.birthYear //выведет возраст объекта
            },
            set(value) { //сетер - может принимать любое значение и на основе этого значения выполнять любые операции вплоть до отрисовки элементов на странице документа
                document.body.style.backgroundColor = value //при вызове person.age = 'red' поменяет фон страницы на красный
                console.log('Set age', value)
            }
        }
    }

)

for (let key in person) {
    if (person.hasOwnProperty(key)) { //метод hasOwnProperty проверяет что ключ-значение не находиться в прототипе объекта, рекоментуеться всегда делать данную проверку при использовании цикла for in, что бы не выводить ключ-значение ноходящиеся в прототипе объекта
        console.log('Key', key) //ни чего не выведет
    }
}